{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isLeaf, toPathKey } from '../utils/commonUtil';\nimport CascaderContext from '../context';\nimport Checkbox from './Checkbox';\nimport { SEARCH_MARK } from '../hooks/useSearchOptions';\nexport default function Column(_ref) {\n  var prefixCls = _ref.prefixCls,\n      multiple = _ref.multiple,\n      options = _ref.options,\n      activeValue = _ref.activeValue,\n      prevValuePath = _ref.prevValuePath,\n      onToggleOpen = _ref.onToggleOpen,\n      onSelect = _ref.onSelect,\n      onActive = _ref.onActive,\n      checkedSet = _ref.checkedSet,\n      halfCheckedSet = _ref.halfCheckedSet,\n      loadingKeys = _ref.loadingKeys,\n      isSelectable = _ref.isSelectable;\n  var menuPrefixCls = \"\".concat(prefixCls, \"-menu\");\n  var menuItemPrefixCls = \"\".concat(prefixCls, \"-menu-item\");\n\n  var _React$useContext = React.useContext(CascaderContext),\n      fieldNames = _React$useContext.fieldNames,\n      changeOnSelect = _React$useContext.changeOnSelect,\n      expandTrigger = _React$useContext.expandTrigger,\n      expandIcon = _React$useContext.expandIcon,\n      loadingIcon = _React$useContext.loadingIcon,\n      dropdownMenuColumnStyle = _React$useContext.dropdownMenuColumnStyle;\n\n  var hoverOpen = expandTrigger === 'hover'; // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: menuPrefixCls,\n    role: \"menu\"\n  }, options.map(function (option) {\n    var _classNames;\n\n    var disabled = option.disabled;\n    var searchOptions = option[SEARCH_MARK];\n    var label = option[fieldNames.label];\n    var value = option[fieldNames.value];\n    var isMergedLeaf = isLeaf(option, fieldNames); // Get real value of option. Search option is different way.\n\n    var fullPath = searchOptions ? searchOptions.map(function (opt) {\n      return opt[fieldNames.value];\n    }) : [].concat(_toConsumableArray(prevValuePath), [value]);\n    var fullPathKey = toPathKey(fullPath);\n    var isLoading = loadingKeys.includes(fullPathKey); // >>>>> checked\n\n    var checked = checkedSet.has(fullPathKey); // >>>>> halfChecked\n\n    var halfChecked = halfCheckedSet.has(fullPathKey); // >>>>> Open\n\n    var triggerOpenPath = function triggerOpenPath() {\n      if (!disabled && (!hoverOpen || !isMergedLeaf)) {\n        onActive(fullPath);\n      }\n    }; // >>>>> Selection\n\n\n    var triggerSelect = function triggerSelect() {\n      if (isSelectable(option)) {\n        onSelect(fullPath, isMergedLeaf);\n      }\n    }; // >>>>> Title\n\n\n    var title;\n\n    if (typeof option.title === 'string') {\n      title = option.title;\n    } else if (typeof label === 'string') {\n      title = label;\n    } // >>>>> Render\n\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: fullPathKey,\n      className: classNames(menuItemPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-expand\"), !isMergedLeaf), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-active\"), activeValue === value), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-loading\"), isLoading), _classNames)),\n      style: dropdownMenuColumnStyle,\n      role: \"menuitemcheckbox\",\n      title: title,\n      \"aria-checked\": checked,\n      \"data-path-key\": fullPathKey,\n      onClick: function onClick() {\n        triggerOpenPath();\n\n        if (!multiple || isMergedLeaf) {\n          triggerSelect();\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (changeOnSelect) {\n          onToggleOpen(false);\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        if (hoverOpen) {\n          triggerOpenPath();\n        }\n      }\n    }, multiple && /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      halfChecked: halfChecked,\n      disabled: disabled,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        triggerSelect();\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-content\")\n    }, option[fieldNames.label]), !isLoading && expandIcon && !isMergedLeaf && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-expand-icon\")\n    }, expandIcon), isLoading && loadingIcon && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-loading-icon\")\n    }, loadingIcon));\n  }));\n}","map":{"version":3,"sources":["/Users/xujinting/Desktop/web_final_main/web_final_progect/final/frontend/node_modules/rc-cascader/es/OptionList/Column.js"],"names":["_defineProperty","_toConsumableArray","React","classNames","isLeaf","toPathKey","CascaderContext","Checkbox","SEARCH_MARK","Column","_ref","prefixCls","multiple","options","activeValue","prevValuePath","onToggleOpen","onSelect","onActive","checkedSet","halfCheckedSet","loadingKeys","isSelectable","menuPrefixCls","concat","menuItemPrefixCls","_React$useContext","useContext","fieldNames","changeOnSelect","expandTrigger","expandIcon","loadingIcon","dropdownMenuColumnStyle","hoverOpen","createElement","className","role","map","option","_classNames","disabled","searchOptions","label","value","isMergedLeaf","fullPath","opt","fullPathKey","isLoading","includes","checked","has","halfChecked","triggerOpenPath","triggerSelect","title","key","style","onClick","onDoubleClick","onMouseEnter","e","stopPropagation"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isLeaf, toPathKey } from '../utils/commonUtil';\nimport CascaderContext from '../context';\nimport Checkbox from './Checkbox';\nimport { SEARCH_MARK } from '../hooks/useSearchOptions';\nexport default function Column(_ref) {\n  var prefixCls = _ref.prefixCls,\n      multiple = _ref.multiple,\n      options = _ref.options,\n      activeValue = _ref.activeValue,\n      prevValuePath = _ref.prevValuePath,\n      onToggleOpen = _ref.onToggleOpen,\n      onSelect = _ref.onSelect,\n      onActive = _ref.onActive,\n      checkedSet = _ref.checkedSet,\n      halfCheckedSet = _ref.halfCheckedSet,\n      loadingKeys = _ref.loadingKeys,\n      isSelectable = _ref.isSelectable;\n  var menuPrefixCls = \"\".concat(prefixCls, \"-menu\");\n  var menuItemPrefixCls = \"\".concat(prefixCls, \"-menu-item\");\n\n  var _React$useContext = React.useContext(CascaderContext),\n      fieldNames = _React$useContext.fieldNames,\n      changeOnSelect = _React$useContext.changeOnSelect,\n      expandTrigger = _React$useContext.expandTrigger,\n      expandIcon = _React$useContext.expandIcon,\n      loadingIcon = _React$useContext.loadingIcon,\n      dropdownMenuColumnStyle = _React$useContext.dropdownMenuColumnStyle;\n\n  var hoverOpen = expandTrigger === 'hover'; // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: menuPrefixCls,\n    role: \"menu\"\n  }, options.map(function (option) {\n    var _classNames;\n\n    var disabled = option.disabled;\n    var searchOptions = option[SEARCH_MARK];\n    var label = option[fieldNames.label];\n    var value = option[fieldNames.value];\n    var isMergedLeaf = isLeaf(option, fieldNames); // Get real value of option. Search option is different way.\n\n    var fullPath = searchOptions ? searchOptions.map(function (opt) {\n      return opt[fieldNames.value];\n    }) : [].concat(_toConsumableArray(prevValuePath), [value]);\n    var fullPathKey = toPathKey(fullPath);\n    var isLoading = loadingKeys.includes(fullPathKey); // >>>>> checked\n\n    var checked = checkedSet.has(fullPathKey); // >>>>> halfChecked\n\n    var halfChecked = halfCheckedSet.has(fullPathKey); // >>>>> Open\n\n    var triggerOpenPath = function triggerOpenPath() {\n      if (!disabled && (!hoverOpen || !isMergedLeaf)) {\n        onActive(fullPath);\n      }\n    }; // >>>>> Selection\n\n\n    var triggerSelect = function triggerSelect() {\n      if (isSelectable(option)) {\n        onSelect(fullPath, isMergedLeaf);\n      }\n    }; // >>>>> Title\n\n\n    var title;\n\n    if (typeof option.title === 'string') {\n      title = option.title;\n    } else if (typeof label === 'string') {\n      title = label;\n    } // >>>>> Render\n\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: fullPathKey,\n      className: classNames(menuItemPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-expand\"), !isMergedLeaf), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-active\"), activeValue === value), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-loading\"), isLoading), _classNames)),\n      style: dropdownMenuColumnStyle,\n      role: \"menuitemcheckbox\",\n      title: title,\n      \"aria-checked\": checked,\n      \"data-path-key\": fullPathKey,\n      onClick: function onClick() {\n        triggerOpenPath();\n\n        if (!multiple || isMergedLeaf) {\n          triggerSelect();\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (changeOnSelect) {\n          onToggleOpen(false);\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        if (hoverOpen) {\n          triggerOpenPath();\n        }\n      }\n    }, multiple && /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      halfChecked: halfChecked,\n      disabled: disabled,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        triggerSelect();\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-content\")\n    }, option[fieldNames.label]), !isLoading && expandIcon && !isMergedLeaf && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-expand-icon\")\n    }, expandIcon), isLoading && loadingIcon && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-loading-icon\")\n    }, loadingIcon));\n  }));\n}"]},"metadata":{},"sourceType":"module"}