{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // const client = new WebSocket('ws://localhost:4000');\n\nconst useChat = () => {\n  _s();\n\n  const logOut = () => {\n    setPanes([]);\n  };\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [anotherUser, setAnotherUser] = useState('');\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const initialPanes = [//     { title: 'Tab 1', content: 'Content of Tab 1', key: '1' },\n    //     { title: 'Tab 2', content: 'Content of Tab 2', key: '2' },\n    //     { title: 'Tab 3', content: 'Content of Tab 3', key: '3' },\n  ];\n  const [newTabIndex, setNewTabIndex] = useState(3);\n  const [activeKey, setActiveKey] = useState();\n  const [panes, setPanes] = useState(initialPanes);\n\n  const onChange = activeKey => {\n    setActiveKey(activeKey);\n  };\n\n  const onEdit = (targetKey, action) => {\n    if (action === 'add') {\n      showModal();\n    }\n\n    if (action === 'remove') {\n      remove(targetKey);\n    }\n  };\n\n  const add = chatBoxName => {\n    setNewTabIndex(newTabIndex + 1);\n    const activeKey = `newTab${newTabIndex}`;\n    const newPanes = [...panes];\n    newPanes.push({\n      title: anotherUser,\n      chatBoxName: chatBoxName,\n      key: activeKey\n    });\n    setPanes(newPanes);\n    setActiveKey(activeKey);\n  };\n\n  const remove = targetKey => {\n    let newActiveKey = activeKey;\n    let lastIndex;\n    panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const newPanes = panes.filter(pane => pane.key !== targetKey);\n\n    if (newPanes.length && newActiveKey === targetKey) {\n      if (lastIndex >= 0) {\n        newActiveKey = newPanes[lastIndex].key;\n      } else {\n        newActiveKey = newPanes[0].key;\n      }\n    }\n\n    setPanes(newPanes);\n    setActiveKey(activeKey);\n  };\n\n  return {\n    logOut,\n    isModalVisible,\n    anotherUser,\n    setAnotherUser,\n    handleOk,\n    handleCancel,\n    activeKey,\n    panes,\n    onChange,\n    onEdit,\n    add\n  };\n};\n\n_s(useChat, \"4thhtjCr0IB9jLXas3c7svtcVk8=\");\n\nexport default useChat;","map":{"version":3,"sources":["/Users/xujinting/Desktop/web_final_main/web_final_progect/final/frontend/src/Hooks/useChat.js"],"names":["useState","useChat","logOut","setPanes","isModalVisible","setIsModalVisible","anotherUser","setAnotherUser","showModal","handleOk","handleCancel","initialPanes","newTabIndex","setNewTabIndex","activeKey","setActiveKey","panes","onChange","onEdit","targetKey","action","remove","add","chatBoxName","newPanes","push","title","key","newActiveKey","lastIndex","forEach","pane","i","filter","length"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n// const client = new WebSocket('ws://localhost:4000');\n\nconst useChat = () => {\n    const logOut = () => {\n        setPanes([]);\n    };\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [anotherUser, setAnotherUser] = useState('');\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const initialPanes = [\n    //     { title: 'Tab 1', content: 'Content of Tab 1', key: '1' },\n    //     { title: 'Tab 2', content: 'Content of Tab 2', key: '2' },\n    //     { title: 'Tab 3', content: 'Content of Tab 3', key: '3' },\n    ];\n    const [newTabIndex, setNewTabIndex] = useState(3);\n    const [activeKey, setActiveKey] = useState();\n    const [panes, setPanes] = useState(initialPanes);\n    const onChange = (activeKey) => {\n        setActiveKey(activeKey);\n    };\n    \n    const onEdit = (targetKey, action) => {\n        if(action === 'add'){\n            showModal();\n        }\n        if(action === 'remove') {\n            remove(targetKey)\n        }\n    };\n    \n    const add = (chatBoxName) => {\n        setNewTabIndex(newTabIndex+1);\n        const activeKey = `newTab${newTabIndex}`;\n        const newPanes = [...panes];\n        newPanes.push({ title: anotherUser, chatBoxName: chatBoxName, key: activeKey });\n        setPanes(newPanes);\n        setActiveKey(activeKey);\n    };\n\n    const remove = (targetKey) => {\n        let newActiveKey = activeKey;\n        let lastIndex;\n        panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const newPanes = panes.filter(pane => pane.key !== targetKey);\n        if (newPanes.length && newActiveKey === targetKey) {\n            if(lastIndex >= 0){\n                newActiveKey = newPanes[lastIndex].key;\n            }else{\n                newActiveKey = newPanes[0].key;\n            }\n        }\n        setPanes(newPanes);\n        setActiveKey(activeKey);\n    };\n    \n    return {\n        logOut,\n        isModalVisible,\n        anotherUser,\n        setAnotherUser,\n        handleOk,\n        handleCancel,\n        activeKey,\n        panes,\n        onChange,\n        onEdit,\n        add,\n    };\n\n};\n\n\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}