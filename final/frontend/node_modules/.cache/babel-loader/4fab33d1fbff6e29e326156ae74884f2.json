{"ast":null,"code":"var _jsxFileName = \"/Users/xujinting/Desktop/web_final_main/web_final_progect/final/frontend/src/Components/ChatBoxMessages.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MESSAGES_QUERY, MESSAGE_SUBSCRIPTION } from '../graphql/inedx';\nimport { Tag } from 'antd';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatBoxMessages = _ref => {\n  _s();\n\n  let {\n    username,\n    chatBoxName,\n    chatwparticular\n  } = _ref;\n  const {\n    loading,\n    error,\n    data,\n    subscribeToMore,\n    refetch\n  } = useQuery(MESSAGES_QUERY, {\n    variables: {\n      chatBoxName\n    }\n  });\n  const messagesFooter = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesFooter$curre;\n\n    (_messagesFooter$curre = messagesFooter.current) === null || _messagesFooter$curre === void 0 ? void 0 : _messagesFooter$curre.scrollIntoView({\n      behavior: \"auto\"\n    });\n    console.log('scrolltobottomed');\n  };\n\n  useEffect(async () => {\n    await refetch();\n    scrollToBottom();\n  }, [chatwparticular]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [data]);\n  useEffect(async () => {\n    //await refetch();\n    console.log('i here!!!!!!!'); //scrollToBottom()\n\n    try {\n      console.log('in try');\n      subscribeToMore({\n        document: MESSAGE_SUBSCRIPTION,\n        variables: {\n          chatBoxName\n        },\n        updateQuery: (prev, _ref2) => {\n          let {\n            subscriptionData\n          } = _ref2;\n          console.log('there');\n\n          if (!subscriptionData.data) {\n            return prev;\n          }\n\n          const newMessage = subscriptionData.data.message.message;\n          return { ...prev,\n            messages: [...prev.messages, newMessage]\n          };\n        }\n      });\n    } catch (e) {}\n  }, [subscribeToMore]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\\"Loading...\\\";\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\\"Error!\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Message, {\n    style: {\n      wi\n    },\n    children: [data.messages.map((_ref3, i) => {\n      let {\n        sender,\n        body\n      } = _ref3;\n      return username === sender.username ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'right',\n          wordWrap: 'break-word'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            width: '350px',\n            margin: '5px'\n          },\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"blue\",\n            children: sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          verticalAlign: 'top',\n          wordWrap: 'break-word'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tag, {\n          color: \"blue\",\n          children: sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            width: '350px',\n            margin: '5px'\n          },\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesFooter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ChatBoxMessages, \"qWza0AD5c2Bsgqu5RJ8uyLvlRqI=\", false, function () {\n  return [useQuery];\n});\n\n_c = ChatBoxMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBoxMessages\");","map":{"version":3,"sources":["/Users/xujinting/Desktop/web_final_main/web_final_progect/final/frontend/src/Components/ChatBoxMessages.js"],"names":["useEffect","useRef","useQuery","MESSAGES_QUERY","MESSAGE_SUBSCRIPTION","Tag","Message","ChatBoxMessages","username","chatBoxName","chatwparticular","loading","error","data","subscribeToMore","refetch","variables","messagesFooter","scrollToBottom","current","scrollIntoView","behavior","console","log","document","updateQuery","prev","subscriptionData","newMessage","message","messages","e","wi","map","i","sender","body","textAlign","wordWrap","display","width","margin","verticalAlign"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MESSAGES_QUERY, MESSAGE_SUBSCRIPTION } from '../graphql/inedx';\nimport { Tag } from 'antd';\nimport Message from './Message';\n\nexport const ChatBoxMessages = ({username, chatBoxName, chatwparticular}) => {\n    const { loading, error, data, subscribeToMore,refetch } = useQuery(MESSAGES_QUERY, {variables:{chatBoxName}});\n\n    const messagesFooter = useRef(null);\n    const scrollToBottom = () => {\n      messagesFooter.current?.scrollIntoView({ behavior: \"auto\" })\n      console.log('scrolltobottomed')\n    }\n    useEffect(async ()=>{\n      await refetch()\n      scrollToBottom()\n    }\n    ,[chatwparticular])\n    useEffect(() => {scrollToBottom()}, [data])\n    useEffect(async() => {\n        //await refetch();\n        console.log('i here!!!!!!!')\n        //scrollToBottom()\n        try {\n          console.log('in try')\n          subscribeToMore({\n            document: MESSAGE_SUBSCRIPTION,\n            variables: { chatBoxName },\n            updateQuery: (prev, { subscriptionData }) => {\n              console.log('there')\n              if (!subscriptionData.data){\n                \n                return prev;\n              } \n              const newMessage = subscriptionData.data.message.message;\n              \n              return {\n                ...prev,\n                messages: [...prev.messages, newMessage],\n              };\n            },\n          });\n        } catch (e) {}\n    }, [ subscribeToMore]);\n    \n    if (loading) \n      return <p>\"Loading...\";</p>;\n    if (error) \n      return <p>\"Error!\"</p>;\n    return(\n      <Message style={{wi}}>\n      {data.messages.map(({ sender, body }, i) => \n      (username === sender.username)?\n      (   <p key={i} style={{textAlign:'right', wordWrap:'break-word'}}>\n              <span style={{display:'inline-block', width: '350px', margin:'5px'}}>{body}</span> \n              <span><Tag color=\"blue\">{sender.username}</Tag></span> \n          </p>\n      ):(\n          <p key={i} style={{verticalAlign:'top', wordWrap:'break-word'}}>\n              <Tag color=\"blue\">{sender.username}</Tag> \n              <span style={{display:'inline-block', width: '350px', margin:'5px'}}>{body}</span> \n          </p>\n      )\n      )}\n      <div ref={messagesFooter} /> \n      </Message>\n    );\n}"]},"metadata":{},"sourceType":"module"}